---
- name: Prepare System
  hosts: all
  become: true
  gather_facts: true
  any_errors_fatal: true
  pre_tasks:
    - name: Pausing for 5 seconds...
      ansible.builtin.pause:
        seconds: 5
    - name: Populate service facts
      service_facts:
  tasks:
    - name: Locale
      block:
        - name: Locale | Set timezone
          community.general.timezone:
            name: "{{ timezone | default('Etc/UTC') }}"

    - name: Packages
      block:
        - name: Packages | Install
          ansible.builtin.apt:
            name: apt-transport-https,ca-certificates,conntrack,curl,dirmngr,gdisk,gnupg,hdparm,htop,
              iptables,iputils-ping,ipvsadm,jq,libseccomp2,lm-sensors,neofetch,net-tools,nfs-common,
              nvme-cli,open-iscsi,parted,psmisc,python3,python3-apt,python3-kubernetes,python3-yaml,
              smartmontools,socat,software-properties-common,unzip,util-linux
            install_recommends: false

    - name: User Configuration
      block:
        - name: User Configuration | SSH keys
          ansible.posix.authorized_key:
            user: "{{ ansible_user }}"
            key: "https://github.com/ismailbay.keys"
        - name: User Configuration | Silence login
          ansible.builtin.file:
            dest: "{{ '/home/' + ansible_user if ansible_user != 'root' else '/root' }}/.hushlogin"
            state: touch
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
            mode: "0644"
            modification_time: preserve
            access_time: preserve

    - name: Network Configuration
      notify: Reboot
      block:
        - name: Network Configuration | Set hostname
          ansible.builtin.hostname:
            name: "{{ inventory_hostname }}"
        - name: Network Configuration | Update hosts
          ansible.builtin.copy:
            content: |
              127.0.0.1 localhost
              127.0.1.1 {{ inventory_hostname }}
              # The following lines are desirable for IPv6 capable hosts
              ::1     localhost ip6-localhost ip6-loopback
              ff02::1 ip6-allnodes
              ff02::2 ip6-allrouters
            dest: /etc/hosts
            mode: preserve
        # https://github.com/cilium/cilium/issues/18706
        - name: Network Configuration | Cilium (1)
          ansible.builtin.lineinfile:
            dest: /etc/systemd/networkd.conf
            regexp: ManageForeignRoutingPolicyRules
            line: ManageForeignRoutingPolicyRules=no
        - name: Network Configuration | Cilium (2)
          ansible.builtin.lineinfile:
            dest: /etc/systemd/networkd.conf
            regexp: ManageForeignRoutes
            line: ManageForeignRoutes=no
        # https://github.com/onedr0p/flux-cluster-template/discussions/635
        - name: Network Configuration | Remove /etc/resolv.conf
          ansible.builtin.file:
            path: /etc/resolv.conf
            state: absent
        - name: Network Configuration | Remove search domain
          ansible.builtin.copy:
            mode: 644
            dest: /etc/resolv.conf
            content: |
              search .
              nameserver {{ nameserver }}

    - name: System Configuration
      notify: Reboot
      block:
        - name: System Configuration | Neofetch
          ansible.builtin.copy:
            dest: /etc/profile.d/neofetch.sh
            mode: "0755"
            content: neofetch --config none
        - name: System Configuration | Disable apparmor
          when: ansible_facts.services['apparmor.service'] is defined
          ansible.builtin.systemd:
            name: apparmor
            state: stopped
            masked: true
        - name: System Configuration | Disable swap
          ansible.posix.mount:
            name: "{{ item }}"
            fstype: swap
            state: absent
          loop: ["none", "swap"]
        - name: System Configuration | Kernel modules (1)
          community.general.modprobe:
            name: "{{ item }}"
            state: present
          loop: ["br_netfilter", "ceph", "ip_vs", "ip_vs_rr", "nbd", "overlay", "rbd"]
        - name: System Configuration | Kernel modules (2)
          ansible.builtin.copy:
            dest: "/etc/modules-load.d/{{ item }}.conf"
            mode: "0644"
            content: "{{ item }}"
          loop: ["br_netfilter", "ceph", "ip_vs", "ip_vs_rr", "nbd", "overlay", "rbd"]
        - name: System Configuration | Sysctl
          ansible.posix.sysctl:
            name: "{{ item.key }}"
            value: "{{ item.value }}"
            sysctl_file: /etc/sysctl.d/99-kubernetes.conf
            reload: true
          with_dict: "{{ sysctl_config }}"
          vars:
            sysctl_config:
              fs.inotify.max_queued_events: 65536
              fs.inotify.max_user_watches: 524288
              fs.inotify.max_user_instances: 8192
        - name: Create a new ext4 primary partition
          community.general.parted:
            device: "{{ data_device }}"
            number: 1
            label: gpt
            name: k8s-data
            state: present
            fs_type: ext4
        - name: Create a ext4 filesystem
          community.general.filesystem:
            fstype: ext4
            dev: "{{ data_device }}p1"
        - name: Get the PARTUUID
          ansible.builtin.command: lsblk {{ data_device }}p1 -no PARTUUID
          register: data_partition_uuid
        - name: Mount the newly created partition
          ansible.posix.mount:
            path: /var/lib/longhorn
            src: PARTUUID={{ data_partition_uuid.stdout_lines[0] }}
            fstype: ext4
            state: mounted
        - name: Enable service httpd and ensure it is not masked
          ansible.builtin.systemd_service:
            name: iscsid
            enabled: true
            state: started

  handlers:
    - name: Reboot
      ansible.builtin.reboot:
        msg: Rebooting nodes
        reboot_timeout: 3600
